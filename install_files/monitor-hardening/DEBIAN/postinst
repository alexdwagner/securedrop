#!/bin/sh
# postinst script for securedrop-monitor-hardening
#
# see: dh_installdeb(1)
set -e
set -x
# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
. /usr/share/debconf/confmodule

case "$1" in
    configure)
        # Configure admin user
        db_get securedrop-monitor-hardening/admin_user
        admin_user="$RET"

        groups="sudo ssh"
        for group in $groups; do
            if [ ! "$(getent group $group)" ]; then
                addgroup $group
            fi

            if [ ! "$(groups $admin_user | awk -F ": " "{print $2}" | grep -q "$group")" ]; then
                usermod -a -G $group $admin_user
            fi
        done

        if [ ! -f /home/$admin_user/.google_authenticator ]; then
            gauthcode=$(cat /dev/urandom | tr -dc 'A-Z' | head -c 16)
            cat > /home/$admin_user/.google_authenticator << EOF
$gauthcode
" RATE_LIMIT 3 30
" WINDOW_SIZE 17
" DISALLOW_REUSE
" TOTP_AUTH
EOF
        fi
        chmod 400 /home/$admin_user/.google_authenticator
        chown $admin_user:$admin_user /home/$admin_user/.google_authenticator

        if [ ! "$(grep "# SecureDrop Monitor Server tor config" /etc/tor/torrc)" ]; then
            cat > /etc/tor/torrc << EOF
# SecureDrop Monitor Server tor config
SocksPort 0
SafeLogging 1
RunAsDaemon 1
HiddenServiceDir /var/lib/tor/hidden_service/
HiddenServicePort 22 127.0.0.1:22
HiddenServiceAuthorizeClient stealth $admin_user
EOF
        fi

        # To keep the iptables rules out of a here doc,
        # configuring host entry and iptables will use that hostname
        db_get securedrop-monitor-hardening/app_ip
        app_ip="$RET"

        sed -i '/app_host_entry/d' /etc/hosts
        echo "$app_ip  app_host_entry" >> /etc/hosts

        # Disable swap space
        swapoff -a

        # Restart tor to generate inial ATHS cert.
        # If the admin is ssh'd over tor this will also break their ssh session
        # If the admin wasn't using screen/tmux/... this will leave tor stop and system unreachable
        service tor restart

        # reload ssh to load the new config
        restart ssh

        # TODO will need to modify sysctl.conf for the grsec package
        sysctl -p /etc/sysctl.conf

        #Unattended-upgrades
        cat > /etc/apt/apt.conf.d/20auto-upgrades << EOF
APT::Periodic::Update-Package-Lists "1";
APT::Periodic::Unattended-Upgrade "1";
EOF
        cat > /etc/apt/apt.conf.d/50unattended-upgrades << EOF
Unattended-Upgrade::Origins-Pattern {
        "\${distro_id}:\${distro_codename}-security";
};
Unattended-Upgrade::Package-Blacklist {
};
Unattended-Upgrade::Mail "root";
Unattended-Upgrade::Remove-Unused-Dependencies "true";
Unattended-Upgrade::Automatic-Reboot "true";
EOF

        db_stop
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
